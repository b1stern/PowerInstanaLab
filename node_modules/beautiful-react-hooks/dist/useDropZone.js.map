{"version":3,"sources":["useDropZone.js"],"names":["useDropZone","targetRef","onDrop","onDragOver","onDragLeave","isOver","setIsOver","event","preventDefault"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;AAAA,uBACW,gCAAcA,SAAd,EAAyB,KAAzB,CADX;AAAA,MACzBC,MADyB,kBACzBA,MADyB;AAAA,MACjBC,UADiB,kBACjBA,UADiB;AAAA,MACLC,WADK,kBACLA,WADK;;AAAA,kBAEL,qBAAS,KAAT,CAFK;AAAA;AAAA,MAE1BC,MAF0B;AAAA,MAElBC,SAFkB;;AAIjCH,EAAAA,UAAU,CAAC,UAACI,KAAD,EAAW;AACpBA,IAAAA,KAAK,CAACC,cAAN;AACAF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHS,CAAV;AAKAF,EAAAA,WAAW,CAAC,YAAM;AAChBE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFU,CAAX;AAIA,SAAO;AAAED,IAAAA,MAAM,EAANA,MAAF;AAAUH,IAAAA,MAAM,EAANA;AAAV,GAAP;AACD,CAdD;;eAgBeF,W","sourcesContent":["import { useState } from 'react';\nimport useDragEvents from './useDragEvents';\n\nconst useDropZone = (targetRef) => {\n  const { onDrop, onDragOver, onDragLeave } = useDragEvents(targetRef, false);\n  const [isOver, setIsOver] = useState(false);\n\n  onDragOver((event) => {\n    event.preventDefault();\n    setIsOver(true);\n  });\n\n  onDragLeave(() => {\n    setIsOver(false);\n  });\n\n  return { isOver, onDrop };\n};\n\nexport default useDropZone;\n"],"file":"useDropZone.js"}