"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = require("react");

var _createHandlerSetter3 = _interopRequireDefault(require("./utils/createHandlerSetter"));

var _isClient = _interopRequireDefault(require("./utils/isClient"));

var _isAPISupported = _interopRequireDefault(require("./utils/isAPISupported"));

var _createCbSetterErrorProxy = _interopRequireDefault(require("./utils/createCbSetterErrorProxy"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultOptions = {
  increment: 1,
  startAt: 0,
  finishAt: 100
};
var errorMessage = 'requestAnimationFrame is not supported, this could happen both because ' + 'window.requestAnimationFrame is not supported by your current browser version or you\'re using the ' + 'useRequestAnimationFrame hook whilst server side rendering.';

var useRequestAnimationFrame = function useRequestAnimationFrame(func) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;

  if (!_isClient["default"] || !(0, _isAPISupported["default"])('requestAnimationFrame')) {
    console.warn(errorMessage);
    return (0, _createCbSetterErrorProxy["default"])(errorMessage);
  }

  var opts = _objectSpread({}, defaultOptions, {}, options);

  var progress = (0, _react.useRef)(opts.startAt);

  var _createHandlerSetter = (0, _createHandlerSetter3["default"])(),
      _createHandlerSetter2 = _slicedToArray(_createHandlerSetter, 2),
      onFinish = _createHandlerSetter2[0],
      setOnFinish = _createHandlerSetter2[1];

  var next = function next() {
    return window.requestAnimationFrame(step);
  };

  var step = (0, _react.useCallback)(function () {
    if (progress.current <= opts.finishAt || opts.finishAt === -1) {
      func(progress.current, next);
      progress.current += opts.increment;
    } else if (onFinish.current) {
      onFinish.current();
    }
  }, [func, opts.finishAt, opts.increment, progress.current, onFinish.current]);

  if (progress.current <= opts.startAt) {
    next();
  }

  return setOnFinish;
};

var _default = useRequestAnimationFrame;
exports["default"] = _default;
//# sourceMappingURL=useRequestAnimationFrame.js.map
