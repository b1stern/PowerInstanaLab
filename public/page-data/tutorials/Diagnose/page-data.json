{"componentChunkName":"component---src-pages-tutorials-diagnose-index-mdx","path":"/tutorials/Diagnose/","result":{"pageContext":{"frontmatter":{"title":"Diagnose a Problem","description":null},"relativePagePath":"/tutorials/Diagnose/index.mdx","titleType":"page","MdxNode":{"id":"bce4a77a-5f77-5e1d-b9bc-8f3fc68b79ff","children":[],"parent":"96f60028-03e9-5687-bca8-e305a30336af","internal":{"content":"---\ntitle: Diagnose a Problem\ndescription:\n---\n\nIn this section of the lab, you will learn how Instana can help you get to root cause of a problem in a quick and intuitive manner.\n\nYou can choose either one of the two virtual machines.  Open the chrome browser to the Instana tab to run these exercises.\n\nOn the left side, select **\"Events\"**\n![](images/incident.png)\n\nThis will open up a panel showing all of the Incidents that are affecting the monitored systems and applications. Incidents are the raw Events that have been correlated via\nAnalytics into an Incident. \n\nMake sure that the time selection in the upper right corner is set to **\"Last hour\"**\n\nSelect the Incident that is triggering on the **\"POST /order\"** request.\n![](images/singleIncident.png)\n\n\nIn this case, only a single Event makes up the Incident, but in many cases, you will see 8 or 10 Events that are related to each other contained within a single Incident.\n\nWithin the Incident, you can see when the Incident opened and in some cases, when it closed. \n\nYou will see the \"Triggering Event\" and any \"Related Events\"\n\nOn the right side, click on the **\"+\"** symbol to expand the Triggering Event.\n![](images/singleIncident.png)\n\n\nYou can see in the historical graph that the erroneous calls reached 100% for a period of time.\n![](images/erroneous.png)\n\n\nNext, click the **\"Analyze Calls\"** button to analyze the calls.\n\nYou will be taken to an analytics screen where you can all of the failed calls for **\"POST /order\"** . You can also see latency for the calls is greater than 2 seconds.\n![](images/selectCall.png)\n\n\nSelect one of the **\"POST /order\"** calls\n\n\nYou will be taken to a screen where you can see the Call Stack and Stack Trace data. You explored this previously, but you did it with a good transaction.  Now you are \nexamining a failed transaction.\n![](images/badCall.png)\n\n\nScroll to the bottom of the page where you see the **\"Calls\"**\n![](images/error2053.png)\n\n\n\nWhen you see errors, normally you go to the bottom of the call stack.  That's because the error in the last call is likely affecting the upstream calls.  \n\nClick on the last call and examine the information on the right side.\n\nYou will see the following error message:  **\"IBM MQ call failed with compcode '2' reason '2053\"**\n\nThis error message indicates that the MQ Queue is full and new messages can't be put on the queue.  In the future, Instana will be providing a translated error message for \nkey messages like this so that you don't have to lookup the error codes.\n\n\nNow, scroll all the way to the bottom on the right side of the screen.  You'll see that there is a link that will link to the MQ Queue named CP4I.DEMO.API.Q.\n![](images/queueLink.png)\n\n\nClick on the link to navigate to the queue details.\n![](images/queueDetails.png)\n\n\nOn this screen, you'll notice a few important things.\n- In the upper right corner, you'll notice that the time range is specifically set to the timeframe when the Incident was open.\n- The queue depth is at 100%\n- No messages are going in or out of the queue.\n\nClearly there is a problem with this queue.  The queue is full and transactions won't work properly because new message ban't be placed on the queue.  We need to resolve the queue depth problem in order to fix the application.\n\n\nThat completes this section of the lab.\n\n\nIn this portion of the lab, you learned out to diagnose a problem in Instana.  Ultimately, determining that the queue was full and preventing transactions from completing.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n<Row>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Installing and Configuring Monitoring\"\n    title=\"Install the Instana Monitoring Agent and Configure the Sensors\"\n    href=\"/tutorials/Install\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/dynamicGraph.png)\n\n</ArticleCard>\n\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Explorer Instana\"\n    title=\"Explore the Instana UI and Capabilities\"\n    href=\"/tutorials/Explore\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/InstanaTopology.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Administer Instana\"\n    title=\"Learn How to Perform Administrative Tasks in Instana\"\n    href=\"/tutorials/Console_Access\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/infrastructure.png)\n\n</ArticleCard>\n</Column>\n</Row>","type":"Mdx","contentDigest":"db681501ea3031d1db0c576bc2376e71","owner":"gatsby-plugin-mdx","counter":253},"frontmatter":{"title":"Diagnose a Problem","description":null},"exports":{},"rawBody":"---\ntitle: Diagnose a Problem\ndescription:\n---\n\nIn this section of the lab, you will learn how Instana can help you get to root cause of a problem in a quick and intuitive manner.\n\nYou can choose either one of the two virtual machines.  Open the chrome browser to the Instana tab to run these exercises.\n\nOn the left side, select **\"Events\"**\n![](images/incident.png)\n\nThis will open up a panel showing all of the Incidents that are affecting the monitored systems and applications. Incidents are the raw Events that have been correlated via\nAnalytics into an Incident. \n\nMake sure that the time selection in the upper right corner is set to **\"Last hour\"**\n\nSelect the Incident that is triggering on the **\"POST /order\"** request.\n![](images/singleIncident.png)\n\n\nIn this case, only a single Event makes up the Incident, but in many cases, you will see 8 or 10 Events that are related to each other contained within a single Incident.\n\nWithin the Incident, you can see when the Incident opened and in some cases, when it closed. \n\nYou will see the \"Triggering Event\" and any \"Related Events\"\n\nOn the right side, click on the **\"+\"** symbol to expand the Triggering Event.\n![](images/singleIncident.png)\n\n\nYou can see in the historical graph that the erroneous calls reached 100% for a period of time.\n![](images/erroneous.png)\n\n\nNext, click the **\"Analyze Calls\"** button to analyze the calls.\n\nYou will be taken to an analytics screen where you can all of the failed calls for **\"POST /order\"** . You can also see latency for the calls is greater than 2 seconds.\n![](images/selectCall.png)\n\n\nSelect one of the **\"POST /order\"** calls\n\n\nYou will be taken to a screen where you can see the Call Stack and Stack Trace data. You explored this previously, but you did it with a good transaction.  Now you are \nexamining a failed transaction.\n![](images/badCall.png)\n\n\nScroll to the bottom of the page where you see the **\"Calls\"**\n![](images/error2053.png)\n\n\n\nWhen you see errors, normally you go to the bottom of the call stack.  That's because the error in the last call is likely affecting the upstream calls.  \n\nClick on the last call and examine the information on the right side.\n\nYou will see the following error message:  **\"IBM MQ call failed with compcode '2' reason '2053\"**\n\nThis error message indicates that the MQ Queue is full and new messages can't be put on the queue.  In the future, Instana will be providing a translated error message for \nkey messages like this so that you don't have to lookup the error codes.\n\n\nNow, scroll all the way to the bottom on the right side of the screen.  You'll see that there is a link that will link to the MQ Queue named CP4I.DEMO.API.Q.\n![](images/queueLink.png)\n\n\nClick on the link to navigate to the queue details.\n![](images/queueDetails.png)\n\n\nOn this screen, you'll notice a few important things.\n- In the upper right corner, you'll notice that the time range is specifically set to the timeframe when the Incident was open.\n- The queue depth is at 100%\n- No messages are going in or out of the queue.\n\nClearly there is a problem with this queue.  The queue is full and transactions won't work properly because new message ban't be placed on the queue.  We need to resolve the queue depth problem in order to fix the application.\n\n\nThat completes this section of the lab.\n\n\nIn this portion of the lab, you learned out to diagnose a problem in Instana.  Ultimately, determining that the queue was full and preventing transactions from completing.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n<Row>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Installing and Configuring Monitoring\"\n    title=\"Install the Instana Monitoring Agent and Configure the Sensors\"\n    href=\"/tutorials/Install\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/dynamicGraph.png)\n\n</ArticleCard>\n\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Explorer Instana\"\n    title=\"Explore the Instana UI and Capabilities\"\n    href=\"/tutorials/Explore\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/InstanaTopology.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Administer Instana\"\n    title=\"Learn How to Perform Administrative Tasks in Instana\"\n    href=\"/tutorials/Console_Access\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/infrastructure.png)\n\n</ArticleCard>\n</Column>\n</Row>","fileAbsolutePath":"/Users/bstern/tivoli/Best_Practices/InstanaMiddlewareLab/InstanaMiddlewareLab/src/pages/tutorials/Diagnose/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}