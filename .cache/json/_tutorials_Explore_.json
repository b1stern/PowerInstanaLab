{"pageContext":{"frontmatter":{"title":"Section 2 - Explore Instana and the Quote of the Day Application","description":null},"relativePagePath":"/tutorials/Explore/index.mdx","titleType":"page","MdxNode":{"id":"776fa846-cb1d-5624-a240-5390822cf89a","children":[],"parent":"8e695b3a-be4a-5cee-9559-5953cc1ea434","internal":{"content":"---\ntitle: Section 2 - Explore Instana and the Quote of the Day Application\ndescription:\n---\n\n\n<AnchorLinks>\n  <AnchorLink>2-1: Explore kubernetes</AnchorLink>\n  <AnchorLink>2-1: Explore the Infrasture View</AnchorLink>\n  <AnchorLink>2-3: Create an Application Perspective</AnchorLink>\n  <AnchorLink>2-4: Exploring the Application</AnchorLink>\n  <AnchorLink>2-5: Summary</AnchorLink>\n</AnchorLinks>\n\n***\n\nIn this portion of the lab, you will explore some key Instana capabilities including monitoring of kubernetes, monitoring of applications, and monitoring of infrastructure.\n\n## 2-1: Explore Kubernetes\n\nIn this section of the lab, you want to be logged into the thinkdemo virtual machine.  If you are currently logged into the MQ/ACE virtual machine, switch to the other VM.\n\nOpen the browser tab for the Instana user interface.\n\nOn the left navigation, select \"kubernetes\"\n  ![](images/kubernetes.png)\n\nYou will see a list of kubernetes clusters.   Look for the Cluster with your student name.  If you don't see your student name, you may need to wait a couple of minutes.\n  ![](images/clusters.png)\n\nIf you don't see your student name after a couple of minutes, we need to troubleshoot the Instana Agent.  From a terminal window, issue the following command:\n```sh\noc get pods -n instana-agent\n```\n\nCheck to make sure that all pods are running.\n\nIf all pods are running, we need examine the logs of one of the pods.\n\nType:  \n```sh\noc logs POD_NAME -c instana-agent -n instana-agent\n```\nwhere **POD_NAME** is one of the pods listed in the previous command.\n\nAssuming that your cluster name shows up properly, click on the link for your student name.\n\nYou should see a screen similar to the one below where you can see overall utilization of the kubernetes cluster.\n  ![](images/cluster.png)\n\nSelect some of the other tabs to explore the kubernetes monitoring.  We recommend you look at the Events, Nodes, and Pods tabs.  When you select the pods tab, you will see a list of all pods running within the cluster.\n\nIn the upper right corner, add your student name into the search widget.  You'll notice that it will filter the list to the pods related to the Quote of the Day application.\n  ![](images/pods.png)\n\nClick on one of the links on the left side and drill into the pod utilization details.\n\n\n***\n\n## 2-2: Explore the Infrastructure View\n\nNext, explore the Infrastructure view.  To do this, click on the **\"Infrastructure\"** icon on the left side.\n  ![](images/yourZone1.png)\n\nLook for your student name.  You'll notice that there is a square surrounding two **\"towers\"** with your student name.  The square is a **\"zone\"**.  If you recall, you \nspecified a zone name when you performed the yaml based install of the Instana Agent.  The towers contained within the square represents the OpenShift worker node and the \nvirtual machine running ACE and MQ. \n\nIf this was a more typically kubernetes environment, you would see more cubes, one for each worker node.  Notice the k8s-bstern2 zone.  This is a cluster with three worker nodes.\n\nIf you are unable to find your zone due to the large number of students, you can type your student name in the filter bar at the top\n  ![](images/student6Zone.png) \n\nOr, you can use the lucene query language in the search bar.\n- Flyover the filter bar and select **\"Entity\"**\n- A list will popup. Find and select **\"Host\"**\n- Once you have select \"Host\", another list will popup. Select \"name\"\n- Now, you will see **\"entity.host.name:\"**.  After the \":\", you can do a wildcard search.  For example **\"entity.host.name:student*\"**.\n\nOnce you have found your zone, flyover the tower that represents your worker node.  The taller tower is the worker node.  It is taller because there are more discovered entities \nrunning on that server.\n  ![](images/student6Flyover.png) \n\nYou'll notice that a number of components were automatically discovered and are instrumented for monitoring.\n\nNext, flyover the other tower.  \n  ![](images/student6Flyover2.png) \n\nThis is the ACE and MQ server. You can see the MQ and ACE components along with a discovered JVM, a python app, and more.\n\nIn the bottom right corner there are several icons that allow you to organize the Infrastructure view in different ways.  For example, group the servers by OS architecture.\n  ![](images/organize.png)\n\nWe recommend you explore those at the end of the lab if time permits.\n\nNext, click on the **\"Comparison Table\"** near the top of the page.\n  ![](images/comparisonTab.png)\n\nThis table shows a sortable and searchable list of the Hosts that make up this environment.  You can quickly find hosts consuming high CPU, high memory, or have poor health.\n\nIn addition, if you select where is says **\"Hosts\"**, there is a dropdown list that allows you to see lists of JVMs, containers, etc.\n  ![](images/tableContent.png)\n\nChange from **\"Hosts\"** to **\"Docker Containers\"** in the dropdown list and you'll see a complete list of containers and their utilization and health.\n\nSwitch back to the Map view by clicking on **\"Map\"** near the upper left corner.\n  ![](images/map.png)\n\nZoom in with the plus sign in the bottom right corner.\n  ![](images/plus.png)\n\nYou'll notice that each tower is actually comprised of multiple pizza boxes.   Each one represents an **\"Entity\"** such as an MQ Queue Manager or an ACE Integration Node.\n  ![](images/pizzaBox.png)\n\nFlyover the ACE/MQ server again until you see a list of all discovered Entities.  If you only see 1 entity, move your mouse to one of the corners of the tower.\nOnce you see all of the entities, click your mouse.  You'll see a dialog open \n  ![](images/towerWithEntities.png)\n\nUse the scroll bar to scroll down. You'll notice that you see each of the types of Entities that were discovered.  Expand the MQ entity type and you'll see the Queue\nManager that was discovered.\n  ![](images/dashboardScroll.png)\n\nIt is possible to click on either the \"Open Dashboard\" button or the links for the individual entities.  If you clicked, you could navigate to either the Host \noperating system metrics or the specific middleware entity.\n\nClick on the \"Open Dashboard\" button and we'll examine the Host Agent dashboard.  After you click on the button you'll see a screen that looks like this:\n  ![](images/host.png)\n\nYou can see fine grained metric data for the Host operating system. Scroll down and explore the other metrics.\n\nAs you scroll down the page, you'll notice a section on the left side of the screen that contains a list of Entity types that were discovered. This is the same list that you \nsaw earlier on the Infrastructure view.\n  ![](images/drillMQ.png)\n\nExpand the IBM MQ Queue Manager section and select the link for the **QM1@acemq.tivlab.raleigh.ibm.com** queue manager\n\nYou will navigate to the dashboard for the MQ Queue Manager. Scroll down the page and examine the metrics.  There are many tables that contain links that would allow you to\ndrill into the listener, topics, queues, channels, and more.  Let's focus on the Channels.  Scroll down to the table labeled **\"Channels\"**.  You will notice two channels with the\nsame name. One represents loopback and the other represents the server IP Address.   Select the link next to the one with connection name 10.0.0.3.\n  ![](images/drillChannel.png)\n\nExamine the Channel metrics on the page.\n\nNext, look at the top of the screen.  You'll notice that this is a breadcrumb that allows you to navigate back to where you were earlier in your nativations.   It is also\npossible to use the back button in your browser.\n  ![](images/breadcrumb.png)\n\nIf time permits at the end of the lab, you can explore some of the other elements within the MQ sensor or other middleware such as ACE.\n\n\n### 2-3: Create an Application Perspective\n**Application Perspectives** allow you to group together a number of different services and endpoints into dashboard that shows the health and performance of a business application.\nIn this section, you will create and **Application Persective** for the **Quote of the Day** application that you setup earlier.\n\n\nOn the left hand navigation, select **\"Applications\"**. You will see a screen open up that contains a list of all applications that are defined in the environment.  Initially, this\nthis will be small until the students in the class define their applications.  \n  ![](images/addApplication.png)\n\nThe next thing you are going to do is define an application.  You will see an **\"Add\"** button in the bottom right corner. \n  ![](images/add.png)\n\nClick on the **\"Add\"** button\n\nA dialog will open with two options.  We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab.  For now, click on the **\"New Application Perspective\"** button\n  ![](images/newApplication.png)\n\nWhen the dialog opens, click the **\"Next\"** button\n  ![](images/next.png)\n\nOn the next screen, click the radio button for **\"All downstream services\"**.  This will ensure that all of the downstream calls for the application will be monitored in this \nApplication Perspective.\n\nNext, click the **\"Add filter\"** button.\n\nYou will see list of filter options.  Select the option labeled **\"Zone\"**.\n  ![](images/zoneFilter.png)\n\n\nThen, click on the **\"value\"** field that is next to the **\"Zone\"**.  You should see a list of Zones including your student name.  Select your student name or type the name \nin the entry box.\n  ![](images/zoneStudent6.png)\n\n\nNow, click the **\"Add filter\"** button and select **\"AND\"**\n  ![](images/and.png)\n\n\nSelect **\"Add filter\"** again.  Then, in the search field type the word **\"endpoint\"**.  After typing the word **\"endpoint\"**, you will see an entry \"Endpoint Name\".  \n\nSelect **\"Endpoint Name\"**\n  ![](images/endpointFilter.png)\n\n\nA dropdown list will appear.  If it doesn't, click on the **\"Value\"** field.  In the dropdown list, find and then select the entry for **\"GET /health\"**.\n  ![](images/getHealth.png)\n\n\nFinally, select the **\"=\"** symbol in between **Endpoint Name** and **GET /health** and select **\"!= (does not equal)\"** from the drop down list.\n  ![](images/endpointFilter.png)\n\n\nThis last filter is going to filter out the **\"GET /health\"** requests which are just kubernetes health checks and are unrelated to the application transactions.\n\nYou screen should now look like this:\n  ![](images/appDefinition.png)\n\n\nClick **\"Next\"** to go to the next screen.\n  ![](images/next.png)\n\n\nOn the next page, give the name of your Application Perspect your student name.  For example, **\"student6\"**.  Then, click the **\"All Calls\"** radio button to monitor all calls.  Then, click the **\"Create\"** button to create your Application Perspective.\n  ![](images/createApp.png)\n\nYou have now created an Application Perspective. In the next section, you'll explore the application.\n\n\n### 2-4: Explore the Application\n\nAfter creating the application, your screen should have automatically changed context to show the **studentXXX** Application Perspective that you just defined.\n\nInitially, you probably won't see any metrics on the screen.  In the upper right corner, click the **\"Live\"** button and within a short amount of time you should start\nto see metrics in the widgets.\n  ![](images/yourApplication.png)\n\nOn this page you can see the transaction volumes, the number of erroneous calls, latency, and the top services that make up the application.\n\nYou'll notice a number of tabs across the top of the screen.  Explore these tabs.  In particular, let's take a look at the **\"Depedencies\"** tab.\n\nOn the dependencies tab, you'll see a full topology of the application services.  This topology is discovered automatically.  You can see transactions flowing between\nthe different nodes in the topology.   Most of these services are node.js based cloud-native services. The **\"acemq.tivlab.raleigh.ibm.com-BK1:EG2\"** is the ACE \nintegration node named BK1 and Integration Server named EG2.   The QM1 node in the topology is the MQ Queue Manager named **\"QM1\"**.\n\nClick on the **\"QM1\"** node.  Notice that there are 3 options that would allow you to navigate to the MQ dashboard, the transaction Flow within MQ, or analyze the transaction\ncalls through MQ.\n\nClick on **\"Upstream/Downsteam\"** near the top of the page.  This will allow you to see a list of Upstream and Downstream services for the application.\n  ![](images/upstreamDownstream.png)\n\n\nClick on **\"Stack\"** where you can view the Application, Kubernetes, and Infrastructure stack that makes up the application.\n  ![](images/stack.png)\n\n\nAll of this contextual and relationship data helps you analyze and debug you applications to get to root cause as quickly as possible.  In addition, our built \nanalytics uses this data to automatically group multiple related **\"Events\"** into a single **\"Incident\"** for diagnosis.\n\nClose the **Stack** dialog by either clicking on the **Stack** button or somewhere else on the background of the Instana GUI.\n\nClick on the Services Tab\n  ![](images/services.png)\n\n\nYou will see a list of services that make up the application.\n\nScroll down on the page until you see the **\"qotd-engraving\"** service.\n\nClick on the **qotd-engraving** link on the left Column.  The qotd-engraving service is the service that calls an ACE flow and then puts a message on the MQ queue. \nWe want to explore this service in more detail.\n  ![](images/qotdEngraving.png)\n\n\n\nClick on the **\"Analyze Calls\"** button to analyze the individual transactions that are executing within the **\"qotd-engraving\"** service.\n  ![](images/analyzeCalls.png)\n\nThis will take you to a screen showing all of the different types of calls taking place within the qotd-engraving service.  At the top, there is a summary of all calls in terms of\ntransaction rates, return codes, erroneous calls, and latency.\n\nOn the right side, click the arrow to expand the list of qotd-engraving **\"POST /order\"** calls.  Instana is capturing 100% of the transactions so that you don't miss intermittent problems that might be occurring in the environment.  \n  ![](images/engravingCalls.png)\n\n\nSelect one of the requests\n\nYou are now looking at the tracing data for a single transaction.  At the top of the screen, you will see a summary of the latency, sub-calls and timeline. On the right\nside of the screen, you'll see the details and stack trace.\n  ![](images/call1.png)\n\n\nScroll down and you will see the service endpoint list\n  ![](images/call2.png)\n\n\nFinally, scroll to the bottom of the screen and you will see a detailed call stack.  The call stack gives you the timing and sequence of the call going through the application.\n  ![](images/call3.png)\n\n\nIf you select the text on the left or the timeline bar, the **\"Details & Stack Trace\"** context will change.\n\nExplore the different types of calls going through this transaction by selecting the individual call.  When you select an entry, examine the detailed information on the right.\n  ![](images/callStack.png)\n\n\nYou should notice that different request types are color coded differently.  Blue represents the HTTP requests going through an App Server or java process. Orange represents\na database call.  And green represents a messaging call (ACE and MQ).  \n\nWhen you select the Node.js App Server requests, you'll see the **StackTrace** on the right hand side. Within the **StackTrace**, click one of the URLs.\n  ![](images/stackTrace.png)\n\n\nWhen you click on the link, Instana will decompile the code and show you the lines of code.  The exact line of code that is executing will be highlighted in yellow.\n  ![](images/lineOfCode.png)\n\n\nWhen you select the ACE portions of the call Stack (gen.supplychain, msgFlowTransaction, and postOrder) you will see key information including the flow name, Integration Node,\nIntegration Server, IP address, and more.\n\n  ![](images/ace.png)\n\n\nWhen you select the MQ portion of the call stack, you'll see key information related to the MQ environment on the right.  The information includes the Queue Manager, Queue Name,\nand the message ID that was posted on the queue.\n  ![](images/mq.png)\n\n\nScroll down to the very bottom where you see a link named **\"CP4I.DEMO.API.Q\"**. \n\nClick on the **\"CP4I.DEMO.API.Q\"** link and you will navigate to the Queue page of the MQ sensor for the CP4I.DEMO.API.Q queue.\n\nEarlier, you explored the Queue Manager and the MQ Channels.  You're now looking at the queue that is being used by this application.  You'll notice key information\nlike the oldest message on the queue, queue depth, input/output rates, and more.\n  ![](images/queue1.png)\n\n\nThat completes this section of the lab.\n\n***\n\n## 2-5: Summary\n\nIn this exercise you have explored some of the key capabilities within Instana.  You explored kubernetes monitoring. You explored the Infrastructure view.  You defined an \nApplication Perspective. And you explored the application monitoring details.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n<Row>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Diagnose a Problem\"\n    title=\"Learn How Instana Can Help you Quickly Diagnose a Complex Problem\"\n    href=\"/tutorials/Diagnose\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/instanaEvents.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Administer Instana\"\n    title=\"Learn How to Perform Administrative Tasks in Instana\"\n    href=\"/tutorials/Administration\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/infrastructure2.png)\n\n</ArticleCard>\n</Column>\n</Row>","type":"Mdx","contentDigest":"732061c5240e9217751dbacaa9961f00","owner":"gatsby-plugin-mdx","counter":259},"frontmatter":{"title":"Section 2 - Explore Instana and the Quote of the Day Application","description":null},"exports":{},"rawBody":"---\ntitle: Section 2 - Explore Instana and the Quote of the Day Application\ndescription:\n---\n\n\n<AnchorLinks>\n  <AnchorLink>2-1: Explore kubernetes</AnchorLink>\n  <AnchorLink>2-1: Explore the Infrasture View</AnchorLink>\n  <AnchorLink>2-3: Create an Application Perspective</AnchorLink>\n  <AnchorLink>2-4: Exploring the Application</AnchorLink>\n  <AnchorLink>2-5: Summary</AnchorLink>\n</AnchorLinks>\n\n***\n\nIn this portion of the lab, you will explore some key Instana capabilities including monitoring of kubernetes, monitoring of applications, and monitoring of infrastructure.\n\n## 2-1: Explore Kubernetes\n\nIn this section of the lab, you want to be logged into the thinkdemo virtual machine.  If you are currently logged into the MQ/ACE virtual machine, switch to the other VM.\n\nOpen the browser tab for the Instana user interface.\n\nOn the left navigation, select \"kubernetes\"\n  ![](images/kubernetes.png)\n\nYou will see a list of kubernetes clusters.   Look for the Cluster with your student name.  If you don't see your student name, you may need to wait a couple of minutes.\n  ![](images/clusters.png)\n\nIf you don't see your student name after a couple of minutes, we need to troubleshoot the Instana Agent.  From a terminal window, issue the following command:\n```sh\noc get pods -n instana-agent\n```\n\nCheck to make sure that all pods are running.\n\nIf all pods are running, we need examine the logs of one of the pods.\n\nType:  \n```sh\noc logs POD_NAME -c instana-agent -n instana-agent\n```\nwhere **POD_NAME** is one of the pods listed in the previous command.\n\nAssuming that your cluster name shows up properly, click on the link for your student name.\n\nYou should see a screen similar to the one below where you can see overall utilization of the kubernetes cluster.\n  ![](images/cluster.png)\n\nSelect some of the other tabs to explore the kubernetes monitoring.  We recommend you look at the Events, Nodes, and Pods tabs.  When you select the pods tab, you will see a list of all pods running within the cluster.\n\nIn the upper right corner, add your student name into the search widget.  You'll notice that it will filter the list to the pods related to the Quote of the Day application.\n  ![](images/pods.png)\n\nClick on one of the links on the left side and drill into the pod utilization details.\n\n\n***\n\n## 2-2: Explore the Infrastructure View\n\nNext, explore the Infrastructure view.  To do this, click on the **\"Infrastructure\"** icon on the left side.\n  ![](images/yourZone1.png)\n\nLook for your student name.  You'll notice that there is a square surrounding two **\"towers\"** with your student name.  The square is a **\"zone\"**.  If you recall, you \nspecified a zone name when you performed the yaml based install of the Instana Agent.  The towers contained within the square represents the OpenShift worker node and the \nvirtual machine running ACE and MQ. \n\nIf this was a more typically kubernetes environment, you would see more cubes, one for each worker node.  Notice the k8s-bstern2 zone.  This is a cluster with three worker nodes.\n\nIf you are unable to find your zone due to the large number of students, you can type your student name in the filter bar at the top\n  ![](images/student6Zone.png) \n\nOr, you can use the lucene query language in the search bar.\n- Flyover the filter bar and select **\"Entity\"**\n- A list will popup. Find and select **\"Host\"**\n- Once you have select \"Host\", another list will popup. Select \"name\"\n- Now, you will see **\"entity.host.name:\"**.  After the \":\", you can do a wildcard search.  For example **\"entity.host.name:student*\"**.\n\nOnce you have found your zone, flyover the tower that represents your worker node.  The taller tower is the worker node.  It is taller because there are more discovered entities \nrunning on that server.\n  ![](images/student6Flyover.png) \n\nYou'll notice that a number of components were automatically discovered and are instrumented for monitoring.\n\nNext, flyover the other tower.  \n  ![](images/student6Flyover2.png) \n\nThis is the ACE and MQ server. You can see the MQ and ACE components along with a discovered JVM, a python app, and more.\n\nIn the bottom right corner there are several icons that allow you to organize the Infrastructure view in different ways.  For example, group the servers by OS architecture.\n  ![](images/organize.png)\n\nWe recommend you explore those at the end of the lab if time permits.\n\nNext, click on the **\"Comparison Table\"** near the top of the page.\n  ![](images/comparisonTab.png)\n\nThis table shows a sortable and searchable list of the Hosts that make up this environment.  You can quickly find hosts consuming high CPU, high memory, or have poor health.\n\nIn addition, if you select where is says **\"Hosts\"**, there is a dropdown list that allows you to see lists of JVMs, containers, etc.\n  ![](images/tableContent.png)\n\nChange from **\"Hosts\"** to **\"Docker Containers\"** in the dropdown list and you'll see a complete list of containers and their utilization and health.\n\nSwitch back to the Map view by clicking on **\"Map\"** near the upper left corner.\n  ![](images/map.png)\n\nZoom in with the plus sign in the bottom right corner.\n  ![](images/plus.png)\n\nYou'll notice that each tower is actually comprised of multiple pizza boxes.   Each one represents an **\"Entity\"** such as an MQ Queue Manager or an ACE Integration Node.\n  ![](images/pizzaBox.png)\n\nFlyover the ACE/MQ server again until you see a list of all discovered Entities.  If you only see 1 entity, move your mouse to one of the corners of the tower.\nOnce you see all of the entities, click your mouse.  You'll see a dialog open \n  ![](images/towerWithEntities.png)\n\nUse the scroll bar to scroll down. You'll notice that you see each of the types of Entities that were discovered.  Expand the MQ entity type and you'll see the Queue\nManager that was discovered.\n  ![](images/dashboardScroll.png)\n\nIt is possible to click on either the \"Open Dashboard\" button or the links for the individual entities.  If you clicked, you could navigate to either the Host \noperating system metrics or the specific middleware entity.\n\nClick on the \"Open Dashboard\" button and we'll examine the Host Agent dashboard.  After you click on the button you'll see a screen that looks like this:\n  ![](images/host.png)\n\nYou can see fine grained metric data for the Host operating system. Scroll down and explore the other metrics.\n\nAs you scroll down the page, you'll notice a section on the left side of the screen that contains a list of Entity types that were discovered. This is the same list that you \nsaw earlier on the Infrastructure view.\n  ![](images/drillMQ.png)\n\nExpand the IBM MQ Queue Manager section and select the link for the **QM1@acemq.tivlab.raleigh.ibm.com** queue manager\n\nYou will navigate to the dashboard for the MQ Queue Manager. Scroll down the page and examine the metrics.  There are many tables that contain links that would allow you to\ndrill into the listener, topics, queues, channels, and more.  Let's focus on the Channels.  Scroll down to the table labeled **\"Channels\"**.  You will notice two channels with the\nsame name. One represents loopback and the other represents the server IP Address.   Select the link next to the one with connection name 10.0.0.3.\n  ![](images/drillChannel.png)\n\nExamine the Channel metrics on the page.\n\nNext, look at the top of the screen.  You'll notice that this is a breadcrumb that allows you to navigate back to where you were earlier in your nativations.   It is also\npossible to use the back button in your browser.\n  ![](images/breadcrumb.png)\n\nIf time permits at the end of the lab, you can explore some of the other elements within the MQ sensor or other middleware such as ACE.\n\n\n### 2-3: Create an Application Perspective\n**Application Perspectives** allow you to group together a number of different services and endpoints into dashboard that shows the health and performance of a business application.\nIn this section, you will create and **Application Persective** for the **Quote of the Day** application that you setup earlier.\n\n\nOn the left hand navigation, select **\"Applications\"**. You will see a screen open up that contains a list of all applications that are defined in the environment.  Initially, this\nthis will be small until the students in the class define their applications.  \n  ![](images/addApplication.png)\n\nThe next thing you are going to do is define an application.  You will see an **\"Add\"** button in the bottom right corner. \n  ![](images/add.png)\n\nClick on the **\"Add\"** button\n\nA dialog will open with two options.  We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab.  For now, click on the **\"New Application Perspective\"** button\n  ![](images/newApplication.png)\n\nWhen the dialog opens, click the **\"Next\"** button\n  ![](images/next.png)\n\nOn the next screen, click the radio button for **\"All downstream services\"**.  This will ensure that all of the downstream calls for the application will be monitored in this \nApplication Perspective.\n\nNext, click the **\"Add filter\"** button.\n\nYou will see list of filter options.  Select the option labeled **\"Zone\"**.\n  ![](images/zoneFilter.png)\n\n\nThen, click on the **\"value\"** field that is next to the **\"Zone\"**.  You should see a list of Zones including your student name.  Select your student name or type the name \nin the entry box.\n  ![](images/zoneStudent6.png)\n\n\nNow, click the **\"Add filter\"** button and select **\"AND\"**\n  ![](images/and.png)\n\n\nSelect **\"Add filter\"** again.  Then, in the search field type the word **\"endpoint\"**.  After typing the word **\"endpoint\"**, you will see an entry \"Endpoint Name\".  \n\nSelect **\"Endpoint Name\"**\n  ![](images/endpointFilter.png)\n\n\nA dropdown list will appear.  If it doesn't, click on the **\"Value\"** field.  In the dropdown list, find and then select the entry for **\"GET /health\"**.\n  ![](images/getHealth.png)\n\n\nFinally, select the **\"=\"** symbol in between **Endpoint Name** and **GET /health** and select **\"!= (does not equal)\"** from the drop down list.\n  ![](images/endpointFilter.png)\n\n\nThis last filter is going to filter out the **\"GET /health\"** requests which are just kubernetes health checks and are unrelated to the application transactions.\n\nYou screen should now look like this:\n  ![](images/appDefinition.png)\n\n\nClick **\"Next\"** to go to the next screen.\n  ![](images/next.png)\n\n\nOn the next page, give the name of your Application Perspect your student name.  For example, **\"student6\"**.  Then, click the **\"All Calls\"** radio button to monitor all calls.  Then, click the **\"Create\"** button to create your Application Perspective.\n  ![](images/createApp.png)\n\nYou have now created an Application Perspective. In the next section, you'll explore the application.\n\n\n### 2-4: Explore the Application\n\nAfter creating the application, your screen should have automatically changed context to show the **studentXXX** Application Perspective that you just defined.\n\nInitially, you probably won't see any metrics on the screen.  In the upper right corner, click the **\"Live\"** button and within a short amount of time you should start\nto see metrics in the widgets.\n  ![](images/yourApplication.png)\n\nOn this page you can see the transaction volumes, the number of erroneous calls, latency, and the top services that make up the application.\n\nYou'll notice a number of tabs across the top of the screen.  Explore these tabs.  In particular, let's take a look at the **\"Depedencies\"** tab.\n\nOn the dependencies tab, you'll see a full topology of the application services.  This topology is discovered automatically.  You can see transactions flowing between\nthe different nodes in the topology.   Most of these services are node.js based cloud-native services. The **\"acemq.tivlab.raleigh.ibm.com-BK1:EG2\"** is the ACE \nintegration node named BK1 and Integration Server named EG2.   The QM1 node in the topology is the MQ Queue Manager named **\"QM1\"**.\n\nClick on the **\"QM1\"** node.  Notice that there are 3 options that would allow you to navigate to the MQ dashboard, the transaction Flow within MQ, or analyze the transaction\ncalls through MQ.\n\nClick on **\"Upstream/Downsteam\"** near the top of the page.  This will allow you to see a list of Upstream and Downstream services for the application.\n  ![](images/upstreamDownstream.png)\n\n\nClick on **\"Stack\"** where you can view the Application, Kubernetes, and Infrastructure stack that makes up the application.\n  ![](images/stack.png)\n\n\nAll of this contextual and relationship data helps you analyze and debug you applications to get to root cause as quickly as possible.  In addition, our built \nanalytics uses this data to automatically group multiple related **\"Events\"** into a single **\"Incident\"** for diagnosis.\n\nClose the **Stack** dialog by either clicking on the **Stack** button or somewhere else on the background of the Instana GUI.\n\nClick on the Services Tab\n  ![](images/services.png)\n\n\nYou will see a list of services that make up the application.\n\nScroll down on the page until you see the **\"qotd-engraving\"** service.\n\nClick on the **qotd-engraving** link on the left Column.  The qotd-engraving service is the service that calls an ACE flow and then puts a message on the MQ queue. \nWe want to explore this service in more detail.\n  ![](images/qotdEngraving.png)\n\n\n\nClick on the **\"Analyze Calls\"** button to analyze the individual transactions that are executing within the **\"qotd-engraving\"** service.\n  ![](images/analyzeCalls.png)\n\nThis will take you to a screen showing all of the different types of calls taking place within the qotd-engraving service.  At the top, there is a summary of all calls in terms of\ntransaction rates, return codes, erroneous calls, and latency.\n\nOn the right side, click the arrow to expand the list of qotd-engraving **\"POST /order\"** calls.  Instana is capturing 100% of the transactions so that you don't miss intermittent problems that might be occurring in the environment.  \n  ![](images/engravingCalls.png)\n\n\nSelect one of the requests\n\nYou are now looking at the tracing data for a single transaction.  At the top of the screen, you will see a summary of the latency, sub-calls and timeline. On the right\nside of the screen, you'll see the details and stack trace.\n  ![](images/call1.png)\n\n\nScroll down and you will see the service endpoint list\n  ![](images/call2.png)\n\n\nFinally, scroll to the bottom of the screen and you will see a detailed call stack.  The call stack gives you the timing and sequence of the call going through the application.\n  ![](images/call3.png)\n\n\nIf you select the text on the left or the timeline bar, the **\"Details & Stack Trace\"** context will change.\n\nExplore the different types of calls going through this transaction by selecting the individual call.  When you select an entry, examine the detailed information on the right.\n  ![](images/callStack.png)\n\n\nYou should notice that different request types are color coded differently.  Blue represents the HTTP requests going through an App Server or java process. Orange represents\na database call.  And green represents a messaging call (ACE and MQ).  \n\nWhen you select the Node.js App Server requests, you'll see the **StackTrace** on the right hand side. Within the **StackTrace**, click one of the URLs.\n  ![](images/stackTrace.png)\n\n\nWhen you click on the link, Instana will decompile the code and show you the lines of code.  The exact line of code that is executing will be highlighted in yellow.\n  ![](images/lineOfCode.png)\n\n\nWhen you select the ACE portions of the call Stack (gen.supplychain, msgFlowTransaction, and postOrder) you will see key information including the flow name, Integration Node,\nIntegration Server, IP address, and more.\n\n  ![](images/ace.png)\n\n\nWhen you select the MQ portion of the call stack, you'll see key information related to the MQ environment on the right.  The information includes the Queue Manager, Queue Name,\nand the message ID that was posted on the queue.\n  ![](images/mq.png)\n\n\nScroll down to the very bottom where you see a link named **\"CP4I.DEMO.API.Q\"**. \n\nClick on the **\"CP4I.DEMO.API.Q\"** link and you will navigate to the Queue page of the MQ sensor for the CP4I.DEMO.API.Q queue.\n\nEarlier, you explored the Queue Manager and the MQ Channels.  You're now looking at the queue that is being used by this application.  You'll notice key information\nlike the oldest message on the queue, queue depth, input/output rates, and more.\n  ![](images/queue1.png)\n\n\nThat completes this section of the lab.\n\n***\n\n## 2-5: Summary\n\nIn this exercise you have explored some of the key capabilities within Instana.  You explored kubernetes monitoring. You explored the Infrastructure view.  You defined an \nApplication Perspective. And you explored the application monitoring details.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n<Row>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Diagnose a Problem\"\n    title=\"Learn How Instana Can Help you Quickly Diagnose a Complex Problem\"\n    href=\"/tutorials/Diagnose\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/instanaEvents.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Administer Instana\"\n    title=\"Learn How to Perform Administrative Tasks in Instana\"\n    href=\"/tutorials/Administration\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/infrastructure2.png)\n\n</ArticleCard>\n</Column>\n</Row>","fileAbsolutePath":"/Users/bstern/tivoli/Best_Practices/PowerInstanaLab/PowerInstanaLab/src/pages/tutorials/Explore/index.mdx"}}}