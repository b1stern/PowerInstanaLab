{"componentChunkName":"component---src-pages-tutorials-install-index-mdx","path":"/tutorials/Install/","result":{"pageContext":{"frontmatter":{"title":"Section 1 - Installing and Configuring Monitoring","description":"Install and configure monitoring for the AIX LPAR and OCP Cluster"},"relativePagePath":"/tutorials/Install/index.mdx","titleType":"page","MdxNode":{"id":"203a7747-bd1b-51ca-bc00-f74a3d37236d","children":[],"parent":"3c37b798-b420-565e-a0f9-76fefa30e5ea","internal":{"content":"---\ntitle: Section 1 - Installing and Configuring Monitoring\ndescription: Install and configure monitoring for the AIX LPAR and OCP Cluster \n---\n\n<AnchorLinks>\n  <AnchorLink>1-1: Login to the AIX LPAR</AnchorLink>\n  <AnchorLink>1-2: Preparing to Install the Instana Agent</AnchorLink>\n  <AnchorLink>1-3: Install the Instana Agent on AIX</AnchorLink>\n  <AnchorLink>1-4: Configuring the Instana Agent</AnchorLink> \n  <AnchorLink>1-5: Install the Instana Agent to Monitor OpenShift</AnchorLink>  \n  <AnchorLink>1-6: Summary</AnchorLink>\n</AnchorLinks>\n\n## 1-1: Login to the AIX LPAR\n\nIn this portion of the lab, you will be installing the Instana Monitoring Agent on the AIX LPAR that you used in previous labs.   This LPAR includes an instance of MariaDB.  We will installing the Agent and going through some additional configuration steps.\n\nBring up a terminal window and log into your AIX LPAR.  You will need to be root when installing the Instana Agent.  Use the \"su - root\" command and enter the root password when prompted.\n\nRun the following command to switch to root:\n```sh\nsu - root\n```\n\n***\n\n## 1-2:  Preparing to Install the Instana Agent\nOn some platforms, the Instana Host Agent comes pre-packaged with a Java SDK.  But, on AIX java is not include in the installation package.  Instana supports multiple vendor SDKs, but does require java 8 or 11.  On some servers, you will need to install a Java SDK before installing the **Host Agent** on AIX.\n\nIn your lab AIX LPAR, a Java SDK already exists.   But you do need to setup an environment variable to ensure that the Agent uses the the SDK.  The **PATH** is already setup correctly, but it is necessary to set the **JAVA_HOME** environment variable.  There are two ways to do this.  You can setup JAVA_HOME as an environment variable. Or, you can add the environment variable to the Instana **setenv** file located in Instana's **bin** directory.  For this lab, we will set the environment variable for the root user account.\n\nAs the root user, type \"cd\" to change to root's home directory.\n```sh\ncd\n```\n\nNext, type \"vi .profile\":\n```sh\nvi .profile\n```\n\nWithin vi, add the following content to the .profile file.\n```sh\nexport JAVA_HOME=/usr/java8_64\n```\n\nType \":wq\" to save your changes and exit the vi session.\n```sh\n:wq\n```\n\nFinally, you must source the .profile file in order to set those environment variables in your current shell.  Type the following:\n```\n. ./.profile\n```\n\nTo confirm that the environment variables are set correctly, type the following:\n```sh\necho $JAVA_HOME\n```\n\nConfirm that you see **/usr/java8_64** in the **JAVA_HOME** environment variable.\n\n***\n\n## 1-3:  Install the Instana Agent on AIX\nNext, we'll be installing the Instana Agent on the AIX LPAR.\n\nLeave the terminal window open.  We'll be using it later.\n\nFor now, login to the Instana user interface at:  https://instana-labs.instana.io/\nLogin as apmdemo-2@yahoo.com with the password provided by the lab instructor.\n\nSelect the \"Stan\" the robot icon in the upper left corner\n  ![](images/stan.png)\n\nNext, click the **\"Deploy Agent\"** button near the upper right corner.\n  ![](images/DeployAgent.png)\n\nA window will open with a list of different environments where you can install the Instana Agent.  In this section of the lab, we are installing the AIX Host Agent.  Select **Unix** from the list of OS's.\n\nNext select the dropdown list in the middle of the page.  Select \"**AIX (64bit - PowerPC)**\" and then click the **Download** button to download the Host Agent.\n  ![](images/AIXDynamic.png)\n\nYou'll notice that there are multiple options for AIX.  In this environment, we are using a 64-bit version of AIX.  In addition, there is an option for a \"**static**\" Agent.  Static Agents are used when you are in an air-gapped environment or when there are strict change control processes.  The **dynamic** agents are recommended for most environments.  The sensors for the discovered technologies will automatically download as needed and the Agent and sensors will automatically update themselves as new fixes and enhancements become available.  This lowers your total cost of ownership.\n\nThe reason that you downloaded the Host Agent from the Instana user interface is that the media has specifically been configured so that the Agent will communicate and send data to **your** Instana server.  This includes the path to the Instana server as well as the Agent Key necessary to communicate with your backend server.\n\nNow that you have download the Agent tar file, you must copy it to the AIX LPAR.   Use **scp** to copy the image to the LPAR.\n\n```sh\nscp instana-agent-aix-ppc-64bit.tar.gz root@<IP address of AIX LPAR>:/opt\n```\nReplace <IP address of AIX LPAR\\> with the IP address of the AIX LPAR.\n\nWhen prompted, enter the root password.\n\nNow, switch back to the AIX terminal window.\n \ncd to the /opt directory.\n```sh\ncd /opt\n```\n\nNow, extract the tar file by issuing the following two commands:\n```sh\ngunzip ./instana-agent-aix-ppc-64bit.tar.gz\ntar -xf ./instana-agent-aix-ppc-64bit.tar\n```\n\nNext, you will need to edit the \"Backend.cfg\" file in order to tell the Agent how to communicate with the Instana server.  For large scale customer deployments, you can update the tar file so that these steps won't be necessary.\n\nChange directory to the /opt/instana-agent/etc/instana directory\n```sh\ncd /opt/instana-agent/etc/instana\n```\n\nUse \"vi\" to edit the file com.instana.agent.main.sender.Backend.cfg.\n```sh\nvi com.instana.agent.main.sender.Backend.cfg\n```\n\nWithin the file, edit and set the following parameters.  Not that they \"key\" parameter must be obtained from your instructor or can be looked up by going to \"Deploy Agent\" and looking at the OpenShift Agent.  Notice that you can see the other parameters on the screen as well.\n  ![](images/agentKey.png)\n\n```sh\nhost=ingress-coral-saas.instana.io\nport=443\nprotocol=HTTP/2\nkey=<provided by your instructor or obtained from the Agent Download screen>\n```\n\nNow, you must start the Agent.  In a production environment, you would also want to setup the /etc/rc.d autostart files, but we are going to skip that step for the lab. \n\nNow, let's start the Instana Agent.  Change directory to the **/opt/instana-agent/bin** directory\n```sh\ncd /opt/instana-agent/bin\n```\n\nRun the start command by typing:\n```sh\n./start\n```\n\nThis will start the Instana Agent.   The Agent will begin monitoring the AIX operating system and will start discovering middleware and key processes that are running on the server.\n\nTo confirm that the Agent is running, issue the following command:\n```sh\n./status\n```\n\nIf the Agent is running, you should see output like:\n```sh\nRunning ... (pid 6489)\n```\n\n\n***\n\n## 1-4:  Configuring the Instana Agent\n\nNow that the Agent is installed, there are some optional configuration steps.  We'll examine and change some of the optional configuration parameters.\n\nChange directory to /opt/instana-agent/etc/instana\n```sh\ncd /opt/instana-agent/etc/instana\n```\n\nThis is the primary directory where most configuration changes are made.   However, there are some configuration files in the parent directory.  For example, if you setup your own internal maven repository to host the sensors, that configuration would be specified in the /opt/instana-agent/etc/mvn-settings.xml file.\n\nUse **vi** to edit the configuration.yaml file.\n```sh\nvi configuration.yaml\n```\n\nThis is the main configuration file that contains mandatory and optional configuration parameters for the Host Agent and the application/middleware sensors.  We'll be modifying a few key settings so that you can understand some of the possibilities.\n\nOne important aspect of Instana's configuration.yaml file is that it is read from dynamically by the Agent.  As you save changes to the file, those changes are immediately detected and implemented by the Agent.  There is no need to recycle the Agent in order for the changes to take effect.  This is not true for all of the configuration files.  For example, if you customize the mvn-settings.xml file, you must restart the Agent for the changes to take effect.\n\nAs you scroll down through the file, you'll see a section titled **\"Secret manager integration\"**.  You'll notice that some of the sensors will require a password.  By specifying a secret manager such as Hashicorp, you can store the passwords in the vault instead of specifying them in an ASCII file.   We won't be using that for this lab.\n\nScroll down further until you see the **Host** section.   Within the **Host** section, you'll notice a few important options. To customize the parameters, you must uncomment the lines by removing the **#** symbol.  Also, keep in mind that this is a yaml file and formatting is very picky.   Lines must be indented by 2 spaces at a time.  Within the host section, you'll see that there is a section where you can specify **tags**.  Tags can be very useful in helping you manage large scale environments.   You'll also notice a parameter called **aixEventsPollRate**.  This parameter allows you to get Events from the AIX Error Report log into Instana.   Let's add some tags to this Agent.  Uncomment the section and add an application name tag of **wordpress** and add a **production** tag.   After you have finished editing, the section should look like this:  \n```sh\n# Host\n# other comments\ncom.instana.plugin.host:\n  tags:\n    - 'production'\n    - 'wordpress'\n#  filesystems\n```\n\nIn the next section, you will see **Hardware & Zone**.  Let's edit this section and add a Zone name.  Zones are used to organize the Agents within the Infrastructure view in the UI, but can also be used to filter data for custom dashboards and threshold assignments.\n\nUncomment the section and change the **availability-zone** to something meaningful like your name so that you can find it in the UI.  The section should look something like this: \n```sh\n# Hardware & Zone\ncom.instana.plugin.generic.hardware:\n  enabled: true # disabled by default\n  availability-zone: 'BenS'\n```\n\nNote, replace **BenS** with your name.  Zone names can contain spaces, so if I wanted, I could specify **\"Ben Stern\"** for the Zone Name instead of **\"BenS**\".  Just choose a meaningful name that will be unique so that you can find our LPAR in the user interface.\n\nContinue to scroll down until you find the **Custom processes** section.  By default, Instana monitors key processes that are related to the technologies that are discovered such as java processes, databases, etc.  It also gathers information on any process that is consuming a lot of CPU or Memory.  But, sometimes there is a desire to monitor other specific processes.  This section allows you to do that by specifying process names, service names, or arguments.  Let's configure instana to monitor the crond process.  Edit the section so that it looks as follows:\n```sh\ncom.instana.plugin.process:\n  processes:\n    - 'cron'\n```\n\nBy monitoring the **cron** process, we can see its performance utilization and can also monitor to ensure that the process is running.\n\nFinally, scroll down to the section titled **\"MariaDB\"**.  Since this server is running MariaDB, let's configure that sensor.  Uncomment the section and specify the MariaDB credentials as follows. Replace <mariadb username\\> and <mariadb passwd\\> with the username and password for your environment.  \n\nThe MariaDB username and password are provided in the Box Note containing the credentials for the environment. \n\n```sh\n# MariaDB\ncom.instana.plugin.mariadb:\n  user: '<mariadb username>'\n  password: '<mariadb passwd>'\n```\n\nFinally, save the changes to the configuration.yaml file by typing **\":wq\"** within the **vi** session.\n```sh\n:wq\n```\n\nIn order to monitor MariaDB, the user account that you specified in the configuration.yaml file must be granted database permissions.   This has already been done in your environment.   But, in a typical MariaDB environment, you would issue this command:   **GRANT SELECT ON performance_schema.* TO '<instana_mon_user>'@'localhost' IDENTIFIED BY 'instana_mon_pwd';**\n\n\nThe Agent is now running and has been configured with the following optional configurations:\n- Zone name has been specified\n- **production** and **wordpress** tags have been set.\n- The Agent is monitoring the cron process\n- The MariaDB sensor has been configured\n\nOpen the Instana UI and select the Infrastructure view\n  ![](images/infrastructure2.png)\n\nYou should see your AIX Host Agent show up within the zone name that you specified.   Sometimes it take a few minutes before the Agent moves from the **undefined** zone to the zone name that you specified.\n\nWe'll drill into the AIX Host details in the **Explore** portion of the lab.  For now, proceed to section 1-5.\n\n\n***\n\n## 1-5:  Install the Instana Agent to Monitor OpenShift\n<span style=\"color:red\"> **In this section of the lab, we are just going to describe the steps necessary to instrument an OpenShift cluster.  You won't be executing these steps since you don't have your own cluster.**</span>\n\n\nPlease just read the steps below.  Do NOT execute these steps.\n\n<span style=\"color:red\"> **We recommend that you execute steps 1 through 5 and then skip the remaining steps because they require access to an OpenShift Cluster where you have Cluster Admin permissions.**</span>\n\n\n1. Select the \"Stan\" the robot icon in the upper left corner\n  ![](images/stan.png)\n\n2. Next, click the **\"Deploy Agent\"** button near the upper right corner.\n  ![](images/DeployAgent.png)\n\nA window will open with a list of different environments where you can install the Instana Agent.  In this lab, we are installing into OpenShift, so select OpenShift from the list.\n  ![](images/OpenShift.png)\n\n3. Select the dropdown list next to the word **\"Technology\"**.  Notice that there are multiple options for installing the Agent.  Choose the **\"YAML\"** option from the list.\n  ![](images/yaml.png) \n\n\n4. Enter a name for the Cluster and Zone as seen below.  Use **your name** for the **\"Cluster name\"** and **your name** for the **\"Zone name\"**.  This will allow you to find your Agent and Kubernetes Cluster within the user interface and not get confused by data coming in from other students.\n  ![](images/ZoneCluster.png) \n\n5. Next, click the **\"Download\"** button to download the yaml file.  The yaml file has been configured specifically to connect to your Instana SaaS environment and will contain the **Cluster** name \nand **Zone** name that you previously specified.\n  ![](images/Download.png) \n\n6. You will be using the **oc** command to install the Instana Agent.  If you have the **oc** command on your laptop, you can issue the command directly on your laptop.  Just make sure that you are logged into the OpenShift cluster.\n\nIf you don't have the oc command on your laptop, you can scp the configuration.yaml file to the Linux VM provided for the lab and issue the **oc** command from the Linux VM.  To scp the configuration.yaml file to the Linux VM, issue this command:\n\n7. Using a terminal window, use the **oc** command to login to the cluster.  If you aren't sure how to login, you can copy the command by going to the OpenShift browser interface and select the login name in the upper right corner and then select **copy login command**\n  ![](images/ocpLogin.png)\n\n8. Issue the following command in the directory that contains the configuration.yaml file:\n```sh\noc create -f ./configuration.yaml\n```\nYou will see output similar to what's shown below\n  ![](images/install.png)\n\nThis command will create an instana-agent project/namespace and install the Instana Agent as a daemonset within the cluster.  As a daemonset, it will run one Agent pod on each node in the cluster.  There are options to either monitor or omit the Master Nodes within the cluster and many other configuration options that can be found in the product documentation.\n\nThe installation process is nearly identical for other versions of kubernetes.\n\n\n 9. Next, you need to setup the proper permissions for the service account.  This will allow the Agent to have access to monitor the entire cluster.\n\n 10. First, change to the instana-agent OpenShift project by typing:\n ```sh\n oc project instana-agent\n ```\n\n 11. Type the following command to setup the proper permissions.  Instana is attempting to monitor the entire cluster and needs access to all projects/namespaces.   \n ```sh\n oc adm policy add-scc-to-user privileged -z instana-agent\n ```\n\n You should see output similar to the screen capture below.\n  ![](images/permissions.png)\n\n12. Next, type:  \n```sh\noc get pods\n```\n\nThis will provide a list of the pods that are in this namespace (project).  Notice that the instana-agent pod is running.\n  ![](images/pods.png)\n\nThis completes the installation of the Instana Agent into an OpenShift cluster.\n\n\n***\n\n## 1-6: Summary\n\nIn this portion of the lab, you learned out to install the Instana Agent to monitor **AIX** and **kubernetes/OpenShift**.  You also learned some of the configuration options to customize the Agent and setup sensors that require customization.  \n\nYou should now have an AIX Agent that is installed and monitoring MariaDB and you should have an OpenShift cluster being monitored.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n\n<Row>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Explorer Instana\"\n    title=\"Explore the Instana UI and Capabilities\"\n    href=\"/tutorials/Explore\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/InstanaTopology.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Diagnose a Problem\"\n    title=\"Learn How Instana Can Help you Quickly Diagnose a Complex Problem\"\n    href=\"/tutorials/Diagnose\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/instanaEvents.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Administer Instana\"\n    title=\"Learn How to Perform Administrative Tasks in Instana\"\n    href=\"/tutorials/Administration\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/infrastructure.png)\n\n</ArticleCard>\n</Column>\n</Row>\n\n\n***","type":"Mdx","contentDigest":"1ae8b0d81e6fc1be9fe31a59c791411f","owner":"gatsby-plugin-mdx","counter":305},"frontmatter":{"title":"Section 1 - Installing and Configuring Monitoring","description":"Install and configure monitoring for the AIX LPAR and OCP Cluster"},"exports":{},"rawBody":"---\ntitle: Section 1 - Installing and Configuring Monitoring\ndescription: Install and configure monitoring for the AIX LPAR and OCP Cluster \n---\n\n<AnchorLinks>\n  <AnchorLink>1-1: Login to the AIX LPAR</AnchorLink>\n  <AnchorLink>1-2: Preparing to Install the Instana Agent</AnchorLink>\n  <AnchorLink>1-3: Install the Instana Agent on AIX</AnchorLink>\n  <AnchorLink>1-4: Configuring the Instana Agent</AnchorLink> \n  <AnchorLink>1-5: Install the Instana Agent to Monitor OpenShift</AnchorLink>  \n  <AnchorLink>1-6: Summary</AnchorLink>\n</AnchorLinks>\n\n## 1-1: Login to the AIX LPAR\n\nIn this portion of the lab, you will be installing the Instana Monitoring Agent on the AIX LPAR that you used in previous labs.   This LPAR includes an instance of MariaDB.  We will installing the Agent and going through some additional configuration steps.\n\nBring up a terminal window and log into your AIX LPAR.  You will need to be root when installing the Instana Agent.  Use the \"su - root\" command and enter the root password when prompted.\n\nRun the following command to switch to root:\n```sh\nsu - root\n```\n\n***\n\n## 1-2:  Preparing to Install the Instana Agent\nOn some platforms, the Instana Host Agent comes pre-packaged with a Java SDK.  But, on AIX java is not include in the installation package.  Instana supports multiple vendor SDKs, but does require java 8 or 11.  On some servers, you will need to install a Java SDK before installing the **Host Agent** on AIX.\n\nIn your lab AIX LPAR, a Java SDK already exists.   But you do need to setup an environment variable to ensure that the Agent uses the the SDK.  The **PATH** is already setup correctly, but it is necessary to set the **JAVA_HOME** environment variable.  There are two ways to do this.  You can setup JAVA_HOME as an environment variable. Or, you can add the environment variable to the Instana **setenv** file located in Instana's **bin** directory.  For this lab, we will set the environment variable for the root user account.\n\nAs the root user, type \"cd\" to change to root's home directory.\n```sh\ncd\n```\n\nNext, type \"vi .profile\":\n```sh\nvi .profile\n```\n\nWithin vi, add the following content to the .profile file.\n```sh\nexport JAVA_HOME=/usr/java8_64\n```\n\nType \":wq\" to save your changes and exit the vi session.\n```sh\n:wq\n```\n\nFinally, you must source the .profile file in order to set those environment variables in your current shell.  Type the following:\n```\n. ./.profile\n```\n\nTo confirm that the environment variables are set correctly, type the following:\n```sh\necho $JAVA_HOME\n```\n\nConfirm that you see **/usr/java8_64** in the **JAVA_HOME** environment variable.\n\n***\n\n## 1-3:  Install the Instana Agent on AIX\nNext, we'll be installing the Instana Agent on the AIX LPAR.\n\nLeave the terminal window open.  We'll be using it later.\n\nFor now, login to the Instana user interface at:  https://instana-labs.instana.io/\nLogin as apmdemo-2@yahoo.com with the password provided by the lab instructor.\n\nSelect the \"Stan\" the robot icon in the upper left corner\n  ![](images/stan.png)\n\nNext, click the **\"Deploy Agent\"** button near the upper right corner.\n  ![](images/DeployAgent.png)\n\nA window will open with a list of different environments where you can install the Instana Agent.  In this section of the lab, we are installing the AIX Host Agent.  Select **Unix** from the list of OS's.\n\nNext select the dropdown list in the middle of the page.  Select \"**AIX (64bit - PowerPC)**\" and then click the **Download** button to download the Host Agent.\n  ![](images/AIXDynamic.png)\n\nYou'll notice that there are multiple options for AIX.  In this environment, we are using a 64-bit version of AIX.  In addition, there is an option for a \"**static**\" Agent.  Static Agents are used when you are in an air-gapped environment or when there are strict change control processes.  The **dynamic** agents are recommended for most environments.  The sensors for the discovered technologies will automatically download as needed and the Agent and sensors will automatically update themselves as new fixes and enhancements become available.  This lowers your total cost of ownership.\n\nThe reason that you downloaded the Host Agent from the Instana user interface is that the media has specifically been configured so that the Agent will communicate and send data to **your** Instana server.  This includes the path to the Instana server as well as the Agent Key necessary to communicate with your backend server.\n\nNow that you have download the Agent tar file, you must copy it to the AIX LPAR.   Use **scp** to copy the image to the LPAR.\n\n```sh\nscp instana-agent-aix-ppc-64bit.tar.gz root@<IP address of AIX LPAR>:/opt\n```\nReplace <IP address of AIX LPAR\\> with the IP address of the AIX LPAR.\n\nWhen prompted, enter the root password.\n\nNow, switch back to the AIX terminal window.\n \ncd to the /opt directory.\n```sh\ncd /opt\n```\n\nNow, extract the tar file by issuing the following two commands:\n```sh\ngunzip ./instana-agent-aix-ppc-64bit.tar.gz\ntar -xf ./instana-agent-aix-ppc-64bit.tar\n```\n\nNext, you will need to edit the \"Backend.cfg\" file in order to tell the Agent how to communicate with the Instana server.  For large scale customer deployments, you can update the tar file so that these steps won't be necessary.\n\nChange directory to the /opt/instana-agent/etc/instana directory\n```sh\ncd /opt/instana-agent/etc/instana\n```\n\nUse \"vi\" to edit the file com.instana.agent.main.sender.Backend.cfg.\n```sh\nvi com.instana.agent.main.sender.Backend.cfg\n```\n\nWithin the file, edit and set the following parameters.  Not that they \"key\" parameter must be obtained from your instructor or can be looked up by going to \"Deploy Agent\" and looking at the OpenShift Agent.  Notice that you can see the other parameters on the screen as well.\n  ![](images/agentKey.png)\n\n```sh\nhost=ingress-coral-saas.instana.io\nport=443\nprotocol=HTTP/2\nkey=<provided by your instructor or obtained from the Agent Download screen>\n```\n\nNow, you must start the Agent.  In a production environment, you would also want to setup the /etc/rc.d autostart files, but we are going to skip that step for the lab. \n\nNow, let's start the Instana Agent.  Change directory to the **/opt/instana-agent/bin** directory\n```sh\ncd /opt/instana-agent/bin\n```\n\nRun the start command by typing:\n```sh\n./start\n```\n\nThis will start the Instana Agent.   The Agent will begin monitoring the AIX operating system and will start discovering middleware and key processes that are running on the server.\n\nTo confirm that the Agent is running, issue the following command:\n```sh\n./status\n```\n\nIf the Agent is running, you should see output like:\n```sh\nRunning ... (pid 6489)\n```\n\n\n***\n\n## 1-4:  Configuring the Instana Agent\n\nNow that the Agent is installed, there are some optional configuration steps.  We'll examine and change some of the optional configuration parameters.\n\nChange directory to /opt/instana-agent/etc/instana\n```sh\ncd /opt/instana-agent/etc/instana\n```\n\nThis is the primary directory where most configuration changes are made.   However, there are some configuration files in the parent directory.  For example, if you setup your own internal maven repository to host the sensors, that configuration would be specified in the /opt/instana-agent/etc/mvn-settings.xml file.\n\nUse **vi** to edit the configuration.yaml file.\n```sh\nvi configuration.yaml\n```\n\nThis is the main configuration file that contains mandatory and optional configuration parameters for the Host Agent and the application/middleware sensors.  We'll be modifying a few key settings so that you can understand some of the possibilities.\n\nOne important aspect of Instana's configuration.yaml file is that it is read from dynamically by the Agent.  As you save changes to the file, those changes are immediately detected and implemented by the Agent.  There is no need to recycle the Agent in order for the changes to take effect.  This is not true for all of the configuration files.  For example, if you customize the mvn-settings.xml file, you must restart the Agent for the changes to take effect.\n\nAs you scroll down through the file, you'll see a section titled **\"Secret manager integration\"**.  You'll notice that some of the sensors will require a password.  By specifying a secret manager such as Hashicorp, you can store the passwords in the vault instead of specifying them in an ASCII file.   We won't be using that for this lab.\n\nScroll down further until you see the **Host** section.   Within the **Host** section, you'll notice a few important options. To customize the parameters, you must uncomment the lines by removing the **#** symbol.  Also, keep in mind that this is a yaml file and formatting is very picky.   Lines must be indented by 2 spaces at a time.  Within the host section, you'll see that there is a section where you can specify **tags**.  Tags can be very useful in helping you manage large scale environments.   You'll also notice a parameter called **aixEventsPollRate**.  This parameter allows you to get Events from the AIX Error Report log into Instana.   Let's add some tags to this Agent.  Uncomment the section and add an application name tag of **wordpress** and add a **production** tag.   After you have finished editing, the section should look like this:  \n```sh\n# Host\n# other comments\ncom.instana.plugin.host:\n  tags:\n    - 'production'\n    - 'wordpress'\n#  filesystems\n```\n\nIn the next section, you will see **Hardware & Zone**.  Let's edit this section and add a Zone name.  Zones are used to organize the Agents within the Infrastructure view in the UI, but can also be used to filter data for custom dashboards and threshold assignments.\n\nUncomment the section and change the **availability-zone** to something meaningful like your name so that you can find it in the UI.  The section should look something like this: \n```sh\n# Hardware & Zone\ncom.instana.plugin.generic.hardware:\n  enabled: true # disabled by default\n  availability-zone: 'BenS'\n```\n\nNote, replace **BenS** with your name.  Zone names can contain spaces, so if I wanted, I could specify **\"Ben Stern\"** for the Zone Name instead of **\"BenS**\".  Just choose a meaningful name that will be unique so that you can find our LPAR in the user interface.\n\nContinue to scroll down until you find the **Custom processes** section.  By default, Instana monitors key processes that are related to the technologies that are discovered such as java processes, databases, etc.  It also gathers information on any process that is consuming a lot of CPU or Memory.  But, sometimes there is a desire to monitor other specific processes.  This section allows you to do that by specifying process names, service names, or arguments.  Let's configure instana to monitor the crond process.  Edit the section so that it looks as follows:\n```sh\ncom.instana.plugin.process:\n  processes:\n    - 'cron'\n```\n\nBy monitoring the **cron** process, we can see its performance utilization and can also monitor to ensure that the process is running.\n\nFinally, scroll down to the section titled **\"MariaDB\"**.  Since this server is running MariaDB, let's configure that sensor.  Uncomment the section and specify the MariaDB credentials as follows. Replace <mariadb username\\> and <mariadb passwd\\> with the username and password for your environment.  \n\nThe MariaDB username and password are provided in the Box Note containing the credentials for the environment. \n\n```sh\n# MariaDB\ncom.instana.plugin.mariadb:\n  user: '<mariadb username>'\n  password: '<mariadb passwd>'\n```\n\nFinally, save the changes to the configuration.yaml file by typing **\":wq\"** within the **vi** session.\n```sh\n:wq\n```\n\nIn order to monitor MariaDB, the user account that you specified in the configuration.yaml file must be granted database permissions.   This has already been done in your environment.   But, in a typical MariaDB environment, you would issue this command:   **GRANT SELECT ON performance_schema.* TO '<instana_mon_user>'@'localhost' IDENTIFIED BY 'instana_mon_pwd';**\n\n\nThe Agent is now running and has been configured with the following optional configurations:\n- Zone name has been specified\n- **production** and **wordpress** tags have been set.\n- The Agent is monitoring the cron process\n- The MariaDB sensor has been configured\n\nOpen the Instana UI and select the Infrastructure view\n  ![](images/infrastructure2.png)\n\nYou should see your AIX Host Agent show up within the zone name that you specified.   Sometimes it take a few minutes before the Agent moves from the **undefined** zone to the zone name that you specified.\n\nWe'll drill into the AIX Host details in the **Explore** portion of the lab.  For now, proceed to section 1-5.\n\n\n***\n\n## 1-5:  Install the Instana Agent to Monitor OpenShift\n<span style=\"color:red\"> **In this section of the lab, we are just going to describe the steps necessary to instrument an OpenShift cluster.  You won't be executing these steps since you don't have your own cluster.**</span>\n\n\nPlease just read the steps below.  Do NOT execute these steps.\n\n<span style=\"color:red\"> **We recommend that you execute steps 1 through 5 and then skip the remaining steps because they require access to an OpenShift Cluster where you have Cluster Admin permissions.**</span>\n\n\n1. Select the \"Stan\" the robot icon in the upper left corner\n  ![](images/stan.png)\n\n2. Next, click the **\"Deploy Agent\"** button near the upper right corner.\n  ![](images/DeployAgent.png)\n\nA window will open with a list of different environments where you can install the Instana Agent.  In this lab, we are installing into OpenShift, so select OpenShift from the list.\n  ![](images/OpenShift.png)\n\n3. Select the dropdown list next to the word **\"Technology\"**.  Notice that there are multiple options for installing the Agent.  Choose the **\"YAML\"** option from the list.\n  ![](images/yaml.png) \n\n\n4. Enter a name for the Cluster and Zone as seen below.  Use **your name** for the **\"Cluster name\"** and **your name** for the **\"Zone name\"**.  This will allow you to find your Agent and Kubernetes Cluster within the user interface and not get confused by data coming in from other students.\n  ![](images/ZoneCluster.png) \n\n5. Next, click the **\"Download\"** button to download the yaml file.  The yaml file has been configured specifically to connect to your Instana SaaS environment and will contain the **Cluster** name \nand **Zone** name that you previously specified.\n  ![](images/Download.png) \n\n6. You will be using the **oc** command to install the Instana Agent.  If you have the **oc** command on your laptop, you can issue the command directly on your laptop.  Just make sure that you are logged into the OpenShift cluster.\n\nIf you don't have the oc command on your laptop, you can scp the configuration.yaml file to the Linux VM provided for the lab and issue the **oc** command from the Linux VM.  To scp the configuration.yaml file to the Linux VM, issue this command:\n\n7. Using a terminal window, use the **oc** command to login to the cluster.  If you aren't sure how to login, you can copy the command by going to the OpenShift browser interface and select the login name in the upper right corner and then select **copy login command**\n  ![](images/ocpLogin.png)\n\n8. Issue the following command in the directory that contains the configuration.yaml file:\n```sh\noc create -f ./configuration.yaml\n```\nYou will see output similar to what's shown below\n  ![](images/install.png)\n\nThis command will create an instana-agent project/namespace and install the Instana Agent as a daemonset within the cluster.  As a daemonset, it will run one Agent pod on each node in the cluster.  There are options to either monitor or omit the Master Nodes within the cluster and many other configuration options that can be found in the product documentation.\n\nThe installation process is nearly identical for other versions of kubernetes.\n\n\n 9. Next, you need to setup the proper permissions for the service account.  This will allow the Agent to have access to monitor the entire cluster.\n\n 10. First, change to the instana-agent OpenShift project by typing:\n ```sh\n oc project instana-agent\n ```\n\n 11. Type the following command to setup the proper permissions.  Instana is attempting to monitor the entire cluster and needs access to all projects/namespaces.   \n ```sh\n oc adm policy add-scc-to-user privileged -z instana-agent\n ```\n\n You should see output similar to the screen capture below.\n  ![](images/permissions.png)\n\n12. Next, type:  \n```sh\noc get pods\n```\n\nThis will provide a list of the pods that are in this namespace (project).  Notice that the instana-agent pod is running.\n  ![](images/pods.png)\n\nThis completes the installation of the Instana Agent into an OpenShift cluster.\n\n\n***\n\n## 1-6: Summary\n\nIn this portion of the lab, you learned out to install the Instana Agent to monitor **AIX** and **kubernetes/OpenShift**.  You also learned some of the configuration options to customize the Agent and setup sensors that require customization.  \n\nYou should now have an AIX Agent that is installed and monitoring MariaDB and you should have an OpenShift cluster being monitored.\n\n\nTo continue other portions of the lab, select one of the lab exercises in the upper left corner or select one of the images below.\n\n\n\n<Row>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Explorer Instana\"\n    title=\"Explore the Instana UI and Capabilities\"\n    href=\"/tutorials/Explore\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/InstanaTopology.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Diagnose a Problem\"\n    title=\"Learn How Instana Can Help you Quickly Diagnose a Complex Problem\"\n    href=\"/tutorials/Diagnose\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/instanaEvents.png)\n\n</ArticleCard>\n</Column>\n\n<Column colLg={4} colMd={4} noGutterMdLeft>\n<ArticleCard\n    color=\"dark\"\n    subTitle=\"Administer Instana\"\n    title=\"Learn How to Perform Administrative Tasks in Instana\"\n    href=\"/tutorials/Administration\"\n    actionIcon=\"arrowRight\"\n    >\n\n![](images/infrastructure.png)\n\n</ArticleCard>\n</Column>\n</Row>\n\n\n***","fileAbsolutePath":"/Users/bstern/tivoli/Best_Practices/PowerInstanaLab/PowerInstanaLab/src/pages/tutorials/Install/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}